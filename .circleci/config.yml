version: 2
jobs:
  build:
    working_directory: ~/repo
    # The primary container is an instance of the first image listed. The job's commands run in this container.
    docker:
      - image: circleci/python:3.6
    # The secondary container is an instance of the second listed image which is run in a common network where ports exposed on the primary container are available on localhost.
      
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            sudo apt install rsync
      # Step 3: run linter and tests
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            tox
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.6
      
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = NYARAS" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc      

      - run:
          name: create packages
          command: |
            python3 setup.py sdist bdist_wheel
          #  python setup.py sdist

      - run:
          name: upload to pypi
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            . venv/bin/activate
            pip install twine
            twine upload --skip-existing ./dist/*
      
      - add_ssh_keys:
          fingerprints:
              - "9b:27:c9:d9:9f:ce:ea:fb:38:fd:3f:ea:f4:f8:5b:d4"
      
      - run:
          name: executing ansible to AWS server
          command: |
            . venv/bin/activate
            pip install ansible
            ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook ansible/deploy.yml  -i ansible/hosts



workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: master